/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by drizzle-zero.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { Row } from "@rocicorp/zero";
import { createBuilder } from "@rocicorp/zero";
import type { DrizzleToZeroSchema, ZeroCustomType } from "drizzle-zero";
import type * as drizzleSchema from "./database/schema";

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema>;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    account: {
      name: "account",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "id"
          >,
        },
        accountId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accountId"
          >,
          serverName: "account_id",
        },
        providerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "providerId"
          >,
          serverName: "provider_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "userId"
          >,
          serverName: "user_id",
        },
        accessToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accessToken"
          >,
          serverName: "access_token",
        },
        refreshToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "refreshToken"
          >,
          serverName: "refresh_token",
        },
        idToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "idToken"
          >,
          serverName: "id_token",
        },
        accessTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accessTokenExpiresAt"
          >,
          serverName: "access_token_expires_at",
        },
        refreshTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "refreshTokenExpiresAt"
          >,
          serverName: "refresh_token_expires_at",
        },
        scope: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "scope"
          >,
        },
        password: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "password"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    apikey: {
      name: "apikey",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "name"
          >,
        },
        start: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "start"
          >,
        },
        prefix: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "prefix"
          >,
        },
        key: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "key"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "userId"
          >,
          serverName: "user_id",
        },
        refillInterval: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "refillInterval"
          >,
          serverName: "refill_interval",
        },
        refillAmount: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "refillAmount"
          >,
          serverName: "refill_amount",
        },
        lastRefillAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "lastRefillAt"
          >,
          serverName: "last_refill_at",
        },
        enabled: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "enabled"
          >,
        },
        rateLimitEnabled: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "rateLimitEnabled"
          >,
          serverName: "rate_limit_enabled",
        },
        rateLimitTimeWindow: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "rateLimitTimeWindow"
          >,
          serverName: "rate_limit_time_window",
        },
        rateLimitMax: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "rateLimitMax"
          >,
          serverName: "rate_limit_max",
        },
        requestCount: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "requestCount"
          >,
          serverName: "request_count",
        },
        remaining: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "remaining"
          >,
        },
        lastRequest: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "lastRequest"
          >,
          serverName: "last_request",
        },
        permissions: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "permissions"
          >,
        },
        metadata: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "metadata"
          >,
        },
        expiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "apikey",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    jwks: {
      name: "jwks",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "jwks",
            "id"
          >,
        },
        publicKey: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "jwks",
            "publicKey"
          >,
          serverName: "public_key",
        },
        privateKey: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "jwks",
            "privateKey"
          >,
          serverName: "private_key",
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "jwks",
            "createdAt"
          >,
          serverName: "created_at",
        },
      },
      primaryKey: ["id"],
    },
    session: {
      name: "session",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "id"
          >,
        },
        token: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "token"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        ipAddress: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "ipAddress"
          >,
          serverName: "ip_address",
        },
        userAgent: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "userAgent"
          >,
          serverName: "user_agent",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "userId"
          >,
          serverName: "user_id",
        },
        impersonatedBy: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "impersonatedBy"
          >,
          serverName: "impersonated_by",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    user: {
      name: "user",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "image"
          >,
        },
        username: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "username"
          >,
        },
        displayUsername: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "displayUsername"
          >,
          serverName: "display_username",
        },
        role: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "role"
          >,
        },
        banned: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "banned"
          >,
        },
        banReason: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "banReason"
          >,
          serverName: "ban_reason",
        },
        banExpires: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "banExpires"
          >,
          serverName: "ban_expires",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    verification: {
      name: "verification",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "id"
          >,
        },
        identifier: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "identifier"
          >,
        },
        value: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "value"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {},
  enableLegacyQueries: true,
  enableLegacyMutators: true,
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
/**
 * Represents a row from the "account" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Account = Row<Schema["tables"]["account"]>;
/**
 * Represents a row from the "apikey" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Apikey = Row<Schema["tables"]["apikey"]>;
/**
 * Represents a row from the "jwks" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Jwk = Row<Schema["tables"]["jwks"]>;
/**
 * Represents a row from the "session" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Session = Row<Schema["tables"]["session"]>;
/**
 * Represents a row from the "user" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type User = Row<Schema["tables"]["user"]>;
/**
 * Represents a row from the "verification" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Verification = Row<Schema["tables"]["verification"]>;

/**
 * Represents the Zero schema query builder.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const builder = createBuilder(schema);
